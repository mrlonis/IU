
Problem 1:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Beta f = new Beta();
  }
  Alpha(int i) {  }
}
class Beta extends Alpha { }

What is the outcome?

Possible answers:

(a) The code does not compile because Beta does not define a no-args constructor. 
(b) The code does not compile because Beta does not define any constructors whatsoever. 
(c) The code compiles and runs succesfully, with no output. 
(d) The code does not compile because Alpha doesn't define a no-args constructor. 
(e) None of the above.

- Option d

Problem 2:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Beta f = new Beta(3);
  }
  Alpha (int i) {  }
}
class Beta extends Alpha {
  Beta(int i) {
  }
}

What is the outcome?

- 1 error and 1 warning found:
-------------
*** Error ***
-------------
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 2.java  [line: 25]
Error: Implicit super constructor Alpha() is undefined. Must explicitly invoke another constructor

Problem 3:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Beta f = new Beta(3);
  }
  Alpha() { System.out.println(0); }
  Alpha(int i) {
    System.out.println(i);
  }
}
class Beta extends Alpha {
  Beta()      { }
  Beta(int i) { }
}

What is the outcome?

- This function prints out 0. I also receive one warning

1 warning found:
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 3.java  [line: 25]
Warning: The value of the local variable f is not used

Problem 4:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Beta f = new Beta(3);
  }
  Alpha() {
    System.out.println(0);
  }
  Alpha(int i) {
    System.out.println(i);
  }
}
class Beta extends Alpha {
  Beta() {
    super(6);
  }
  Beta(int i) {
    this();
  }
}

What is the outcome?

- Compiles and prints out 6. I also get one warning:

1 warning found:
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 4.java  [line: 33]
Warning: The value of the local variable f is not used

Problem 5:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Beta f = new Beta(3);
  }
  Alpha() {
    System.out.println(0);
  }
  Alpha(int i) {
    System.out.println(i);
  }
}
class Beta extends Alpha {
  Beta() {
    super(6);
  }
  Beta(int i) {
    super(3);
    this();
  }
}

What is the outcome?

- Doesn't compile:

1 error and 1 warning found:
-------------
*** Error ***
-------------
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 5.java  [line: 45]
Error: Constructor call must be the first statement in a constructor
-------------
** Warning **
-------------
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 5.java  [line: 30]
Warning: The value of the local variable f is not used

This error is due to this not being attached to anything. A new way to use this is demonstrated in the code below:

class JBT {
 
 int variable = 5;
 
 public static void main(String args[]) {
  JBT obj = new JBT();
 
  obj.method(20);
  obj.method();
 }
 
 void method(int variable) {
  variable = 10;
  System.out.println("Value of Instance variable :" + this.variable);
  System.out.println("Value of Local variable :" + variable);
 }
 
 void method() {
  int variable = 40;
  System.out.println("Value of Instance variable :" + this.variable);
  System.out.println("Value of Local variable :" + variable);
 }
 
 After further testing I have also realize this(); is throwing an error because we already have a consturctor super(3); before this();. If you swap the order of this(); and super(3);, you get the same error

Problem 6:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Beta f = new Beta(12);
  }
  Alpha() {
    System.out.print(0);
  }
  Alpha(int i) {
    System.out.print(i);
  }
}
class Beta extends Alpha {
  Beta() {
  }
  Beta(int i) {
    this();
    System.out.print(3);
  }
}

What is the outcome?

- Prints out '03>' without the ' ' marks

Problem 7:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Alpha f = new Beta();
    System.out.println(f.test(3));
  }
  String test(int i) {
    return (i + 2) + " ";
  }
}
class Beta extends Alpha {
  String test(int i) {
    return (i + 1) + " ";
  }
  String test(long i) {
    return i + " ";
  }
}

What is the outcome?

- Compiles and prints out 4

Problem 8:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Beta f = new Alpha();
    System.out.println(f.test(3));
  }
  String test(int i) {
    return (i + 2) + " ";
  }
}
class Beta extends Alpha {
  String test(int i) {
    return (i + 1) + " ";
  }
}

What is the outcome?

- Doesn't compile and throw 1 error:

1 error found:
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 8.java  [line: 24]
Error: Type mismatch: cannot convert from Alpha to Beta


This error is due to trying to convert one constructor into another

Problem 9:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Alpha f = new Alpha();
    System.out.println(f.test(3));
  }
  String test(int i) {
    return (i + 2) + " ";
  }
}
class Beta extends Alpha {
  String test(int i) {
    return (i + 1) + " ";
  }
}

What is the outcome?

- Compiles and prints 5

Problem 10:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    Beta f = new Beta();
    System.out.println(test(3));
  }
  String test(int i) {
    return (i + 2) + " ";
  }
}
class Beta extends Alpha {
  String test(int i) {
    return (i + 1) + " ";
  }
}

What is the outcome?

- Doesn't compile and throw 1 error:

1 error found:
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 10.java  [line: 25]
Error: Cannot make a static reference to the non-static method test(int) from the type Alpha

Problem 11:

You attempt to compile and run this code:

abstract class Alpha {
  int value;
  Alpha (int value) {
    this.value = value;
    System.out.println(value);
  }
  public static void main(String[] args) {
    Beta f = new Beta(2011);
  }
}
class Beta extends Alpha {
  Beta  (int value) { super(value); }
}

What is the outcome?

- Compiles and prints 2011. Also throw 1 warning:

1 warning found:
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 11.java  [line: 28]
Warning: The value of the local variable f is not used

Problem 12:

You attempt to compile and run this code:

class Alpha {
  public static void main(String[] args) {
    System.out.println("... won't compile");
  }
  public static void main() {
    System.out.println("... will not run");
  }
}

What is the outcome?

- Compiles and prints "... won't compile" without the " " marks

Problem 13:

You attempt to compile and run this code:

abstract class Alpha {
  abstract void complain();
}
class Beta extends Alpha {
  void complain(String s) {
    System.out.println(s);
  }
}
class Tester {
  public static void main(String[] args) {
    Beta f = new Beta();
    f.complain("There's a tomato in every automaton.");
  }
}

What is the outcome?

- Doesn't compile and throws 1 error:

1 error found:
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 13.java  [line: 25]
Error: The type Beta must implement the inherited abstract method Alpha.complain()

Problem 14:

You attempt to compile and run this code:

class Alpha {
  String message;
  Alpha (String msg) { message = msg; }
}
class Beta extends Alpha {
  Beta (String msg)  { message = msg; }
}
class Tester {
  public static void main(String[] args) {
    Beta f = new Beta("Greetings");
    System.out.println(f.message);
  }
}

What is the outcome?

- Doesn't compile and throws 1 error:

1 error found:
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 14.java  [line: 26]
Error: Implicit super constructor Alpha() is undefined. Must explicitly invoke another constructor

Problem 15:

You attempt to compile and run this code:

class Vegetable { } 
class Cabbage extends Vegetable { }
class Kohlrabi extends Cabbage { } 
class Kroger {
  public static void main(String[] args) {
    Cabbage a = new Kohlrabi(); 
  }
}

What is the outcome?

- Compiles but prints Static Error: This class does not have a static void main method accepting String[]. when run

Problem 16:

You attempt to compile and run this code:

class Vegetable { } 
class Cabbage extends Vegetable { }
class Kohlrabi extends Cabbage { } 
class Kroger {
  public static void main(String[] args) {
    Kohlrabi a = new Vegetable(); 
  }
}

What is the outcome?

- Compiles but throws 1 error:

1 error found:
File: /Users/lonis/Library/Mobile Documents/com~apple~CloudDocs/Dropbox/Dropbox/School/Sophmore Year (Fall 2015 - Summer 2016)/Summer 2016/CSCI-C 212/C212-Summer-2016/Java/Lab/Week 3/Lab 8/Problem 16.java  [line: 21]
Error: Type mismatch: cannot convert from Vegetable to Kohlrabi
